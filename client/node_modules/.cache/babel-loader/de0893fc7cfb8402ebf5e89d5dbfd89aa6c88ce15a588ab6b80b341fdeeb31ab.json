{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSE470 Project\\\\StayHotel\\\\client\\\\src\\\\components\\\\Auth.js\",\n  _s = $RefreshSig$();\n// // // // client/src/components/Auth.js\n// // // import React, { useState } from 'react';\n// // // import axios from 'axios';\n// // // import { useNavigate } from 'react-router-dom';\n// // // import '../App.css';\n\n// // // const Auth = ({ setIsAuthenticated }) => {\n// // //   const [isLogin, setIsLogin] = useState(true);\n// // //   const [formData, setFormData] = useState({\n// // //     username: '',\n// // //     email: '',\n// // //     password: '',\n// // //   });\n// // //   const [popupMessage, setPopupMessage] = useState('');\n// // //   const [isPopupVisible, setIsPopupVisible] = useState(false);\n// // //   const navigate = useNavigate();\n\n// // //   const handleChange = (e) => {\n// // //     setFormData({ ...formData, [e.target.name]: e.target.value });\n// // //   };\n\n// // //   const showPopup = (message) => {\n// // //     setPopupMessage(message);\n// // //     setIsPopupVisible(true);\n// // //     setTimeout(() => {\n// // //       setIsPopupVisible(false);\n// // //     }, 3000); // Popup disappears after 3 seconds\n// // //   };\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n// // //     const url = isLogin ? 'http://localhost:5000/api/auth/login' : 'http://localhost:5000/api/auth/register';\n// // //     try {\n// // //       const response = await axios.post(url, formData);\n// // //       console.log('Success:', response.data);\n// // //       if (isLogin) {\n// // //         localStorage.setItem('token', response.data.token);\n// // //         setIsAuthenticated(true);\n// // //         showPopup('Login successful!');\n// // //         setTimeout(() => {\n// // //           navigate('/home');\n// // //         }, 1000); // Redirect after a short delay\n// // //       } else {\n// // //         showPopup('Registration successful! Please log in.');\n// // //         setIsLogin(true);\n// // //       }\n// // //     } catch (err) {\n// // //       console.error('Error:', err);\n// // //       // Check if the response object exists before trying to access its data\n// // //       if (err.response) {\n// // //         showPopup('Error: ' + (err.response.data.error || err.response.data.msg));\n// // //       } else {\n// // //         // If there is no response, it means the server is likely down\n// // //         showPopup('Error: Could not connect to the server.');\n// // //       }\n// // //     }\n// // //   };\n\n// // //   return (\n// // //     <div className=\"container card\">\n// // //       <h2 className=\"text-center\">{isLogin ? 'Login' : 'Register'}</h2>\n// // //       <form onSubmit={handleSubmit}>\n// // //         {!isLogin && (\n// // //           <div className=\"form-group\">\n// // //             <label>Username</label>\n// // //             <input type=\"text\" name=\"username\" value={formData.username} onChange={handleChange} required />\n// // //           </div>\n// // //         )}\n// // //         <div className=\"form-group\">\n// // //           <label>Email</label>\n// // //           <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\n// // //         </div>\n// // //         <div className=\"form-group\">\n// // //           <label>Password</label>\n// // //           <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} required />\n// // //         </div>\n// // //         <button type=\"submit\" className=\"btn btn-primary\">\n// // //           {isLogin ? 'Login' : 'Register'}\n// // //         </button>\n// // //       </form>\n// // //       <button onClick={() => setIsLogin(!isLogin)} className=\"btn btn-link\">\n// // //         {isLogin ? 'Need to create an account? Register' : 'Already have an account? Login'}\n// // //       </button>\n// // //       {isPopupVisible && (\n// // //         <div className=\"popup-container\">\n// // //           <div className=\"popup-message\">{popupMessage}</div>\n// // //         </div>\n// // //       )}\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default Auth;\n// // // \n// // // // client/src/components/Auth.js\n// // // import React, { useState } from 'react';\n// // // import axios from 'axios';\n// // // import { useNavigate } from 'react-router-dom';\n// // // import '../App.css';\n\n// // // const Auth = ({ setIsAuthenticated }) => {\n// // //   const [isLogin, setIsLogin] = useState(true);\n// // //   const [formData, setFormData] = useState({\n// // //     username: '',\n// // //     email: '',\n// // //     password: '',\n// // //     role: 'customer', // Default role is 'customer'\n// // //   });\n// // //   const [popupMessage, setPopupMessage] = useState('');\n// // //   const [isPopupVisible, setIsPopupVisible] = useState(false);\n// // //   const navigate = useNavigate();\n\n// // //   const handleChange = (e) => {\n// // //     setFormData({ ...formData, [e.target.name]: e.target.value });\n// // //   };\n\n// // //   const showPopup = (message) => {\n// // //     setPopupMessage(message);\n// // //     setIsPopupVisible(true);\n// // //     setTimeout(() => {\n// // //       setIsPopupVisible(false);\n// // //     }, 3000); // Popup disappears after 3 seconds\n// // //   };\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n// // //     const url = isLogin ? 'http://localhost:5000/api/auth/login' : 'http://localhost:5000/api/auth/register';\n// // //     try {\n// // //       const response = await axios.post(url, formData);\n// // //       console.log('Success:', response.data);\n// // //       if (isLogin) {\n// // //         localStorage.setItem('token', response.data.token);\n// // //         setIsAuthenticated(true);\n// // //         showPopup('Login successful!');\n// // //         setTimeout(() => {\n// // //           navigate('/home');\n// // //         }, 1000); // Redirect after a short delay\n// // //       } else {\n// // //         showPopup('Registration successful! Please log in.');\n// // //         setIsLogin(true);\n// // //       }\n// // //     } catch (err) {\n// // //       console.error('Error:', err);\n// // //       if (err.response) {\n// // //         showPopup('Error: ' + (err.response.data.error || err.response.data.msg));\n// // //       } else {\n// // //         showPopup('Error: Could not connect to the server.');\n// // //       }\n// // //     }\n// // //   };\n\n// // //   return (\n// // //     <div className=\"container card\">\n// // //       <h2 className=\"text-center\">{isLogin ? 'Login' : 'Register'}</h2>\n// // //       <form onSubmit={handleSubmit}>\n// // //         {!isLogin && (\n// // //           <>\n// // //             <div className=\"form-group\">\n// // //               <label>Username</label>\n// // //               <input type=\"text\" name=\"username\" value={formData.username} onChange={handleChange} required />\n// // //             </div>\n// // //             <div className=\"form-group\">\n// // //               <label>Register As</label>\n// // //               <select name=\"role\" value={formData.role} onChange={handleChange} className=\"form-select\">\n// // //                 <option value=\"customer\">Customer</option>\n// // //                 <option value=\"staff\">Staff</option>\n// // //                 <option value=\"admin\">Admin</option>\n// // //               </select>\n// // //             </div>\n// // //           </>\n// // //         )}\n// // //         <div className=\"form-group\">\n// // //           <label>Email</label>\n// // //           <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\n// // //         </div>\n// // //         <div className=\"form-group\">\n// // //           <label>Password</label>\n// // //           <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} required />\n// // //         </div>\n// // //         <button type=\"submit\" className=\"btn btn-primary\">\n// // //           {isLogin ? 'Login' : 'Register'}\n// // //         </button>\n// // //       </form>\n// // //       <button onClick={() => setIsLogin(!isLogin)} className=\"btn btn-link\">\n// // //         {isLogin ? 'Need to create an account? Register' : 'Already have an account? Login'}\n// // //       </button>\n// // //       {isPopupVisible && (\n// // //         <div className=\"popup-container\">\n// // //           <div className=\"popup-message\">{popupMessage}</div>\n// // //         </div>\n// // //       )}\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default Auth;\n\n// // // // client/src/components/Auth.js\n// // // import React, { useState } from 'react';\n// // // import axios from 'axios';\n// // // import { useNavigate } from 'react-router-dom';\n// // // import '../App.css';\n\n// // // const Auth = ({ setIsAuthenticated }) => {\n// // //   const [isLogin, setIsLogin] = useState(true);\n// // //   const [formData, setFormData] = useState({\n// // //     username: '',\n// // //     email: '',\n// // //     password: '',\n// // //     role: 'customer', // Default role is 'customer'\n// // //   });\n// // //   const [popupMessage, setPopupMessage] = useState('');\n// // //   const [isPopupVisible, setIsPopupVisible] = useState(false);\n// // //   const navigate = useNavigate();\n\n// // //   const handleChange = (e) => {\n// // //     setFormData({ ...formData, [e.target.name]: e.target.value });\n// // //   };\n\n// // //   const showPopup = (message) => {\n// // //     setPopupMessage(message);\n// // //     setIsPopupVisible(true);\n// // //     setTimeout(() => {\n// // //       setIsPopupVisible(false);\n// // //     }, 3000);\n// // //   };\n\n// // //   const handleSubmit = async (e) => {\n// // //     e.preventDefault();\n// // //     const url = isLogin ? 'http://localhost:5000/api/auth/login' : 'http://localhost:5000/api/auth/register';\n// // //     try {\n// // //       const response = await axios.post(url, formData);\n// // //       console.log('Success:', response.data);\n// // //       if (isLogin) {\n// // //         localStorage.setItem('token', response.data.token);\n// // //         setIsAuthenticated(true);\n// // //         showPopup('Login successful!');\n// // //         setTimeout(() => {\n// // //           navigate('/home');\n// // //         }, 1000);\n// // //       } else {\n// // //         showPopup('Registration successful! Please log in.');\n// // //         setIsLogin(true);\n// // //       }\n// // //     } catch (err) {\n// // //       console.error('Error:', err);\n// // //       if (err.response) {\n// // //         showPopup('Error: ' + (err.response.data.msg || err.response.data.error || 'Please try again.'));\n// // //       } else {\n// // //         showPopup('Error: Could not connect to the server.');\n// // //       }\n// // //     }\n// // //   };\n\n// // //   return (\n// // //     <div className=\"container card\">\n// // //       <h2 className=\"text-center\">{isLogin ? 'Login' : 'Register'}</h2>\n// // //       <form onSubmit={handleSubmit}>\n// // //         {!isLogin && (\n// // //           <>\n// // //             <div className=\"form-group\">\n// // //               <label>Username</label>\n// // //               <input type=\"text\" name=\"username\" value={formData.username} onChange={handleChange} required />\n// // //             </div>\n// // //             <div className=\"form-group\">\n// // //               <label>Register As</label>\n// // //               <select name=\"role\" value={formData.role} onChange={handleChange} className=\"form-select\">\n// // //                 <option value=\"customer\">Customer</option>\n// // //                 <option value=\"staff\">Staff</option>\n// // //               </select>\n// // //             </div>\n// // //           </>\n// // //         )}\n// // //         <div className=\"form-group\">\n// // //           <label>Email</label>\n// // //           <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\n// // //         </div>\n// // //         <div className=\"form-group\">\n// // //           <label>Password</label>\n// // //           <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} required />\n// // //         </div>\n// // //         <button type=\"submit\" className=\"btn btn-primary\">\n// // //           {isLogin ? 'Login' : 'Register'}\n// // //         </button>\n// // //       </form>\n// // //       <button onClick={() => setIsLogin(!isLogin)} className=\"btn btn-link\">\n// // //         {isLogin ? 'Need to create an account? Register' : 'Already have an account? Login'}\n// // //       </button>\n// // //       {isPopupVisible && (\n// // //         <div className=\"popup-container\">\n// // //           <div className=\"popup-message\">{popupMessage}</div>\n// // //         </div>\n// // //       )}\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default Auth;\n\n// // // client/src/components/Auth.js\n// // import React, { useState } from 'react';\n// // import axios from 'axios';\n// // import { useNavigate } from 'react-router-dom';\n// // import '../App.css';\n\n// // const Auth = ({ setIsAuthenticated }) => {\n// //   const [isLogin, setIsLogin] = useState(true);\n// //   const [formData, setFormData] = useState({\n// //     username: '',\n// //     email: '',\n// //     password: '',\n// //     role: 'customer', // Default role is 'customer'\n// //   });\n// //   const [popupMessage, setPopupMessage] = useState('');\n// //   const [isPopupVisible, setIsPopupVisible] = useState(false);\n// //   const navigate = useNavigate();\n\n// //   const handleChange = (e) => {\n// //     setFormData({ ...formData, [e.target.name]: e.target.value });\n// //   };\n\n// //   const showPopup = (message) => {\n// //     setPopupMessage(message);\n// //     setIsPopupVisible(true);\n// //     setTimeout(() => {\n// //       setIsPopupVisible(false);\n// //     }, 3000);\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     const url = isLogin ? 'http://localhost:5000/api/auth/login' : 'http://localhost:5000/api/auth/register';\n// //     try {\n// //       const response = await axios.post(url, formData);\n// //       console.log('Success:', response.data);\n// //       if (isLogin) {\n// //         localStorage.setItem('token', response.data.token);\n// //         setIsAuthenticated(true);\n// //         showPopup('Login successful!');\n// //         setTimeout(() => {\n// //           navigate('/home');\n// //         }, 1000);\n// //       } else {\n// //         showPopup('Registration successful! Please log in.');\n// //         setIsLogin(true);\n// //       }\n// //     } catch (err) {\n// //       console.error('Error:', err);\n// //       if (err.response) {\n// //         // Check for the specific admin registration error message\n// //         if (err.response.data.msg === 'An admin user already exists.') {\n// //           showPopup('You cannot register yourself as an admin. This hotel already has an admin. Thank you.');\n// //         } else {\n// //           showPopup('Error: ' + (err.response.data.msg || err.response.data.error || 'Please try again.'));\n// //         }\n// //       } else {\n// //         showPopup('Error: Could not connect to the server.');\n// //       }\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"container card\">\n// //       <h2 className=\"text-center\">{isLogin ? 'Login' : 'Register'}</h2>\n// //       <form onSubmit={handleSubmit}>\n// //         {!isLogin && (\n// //           <>\n// //             <div className=\"form-group\">\n// //               <label>Username</label>\n// //               <input type=\"text\" name=\"username\" value={formData.username} onChange={handleChange} required />\n// //             </div>\n// //             <div className=\"form-group\">\n// //               <label>Register As</label>\n// //               <select name=\"role\" value={formData.role} onChange={handleChange} className=\"form-select\">\n// //                 <option value=\"customer\">Customer</option>\n// //                 <option value=\"staff\">Staff</option>\n// //               </select>\n// //             </div>\n// //           </>\n// //         )}\n// //         <div className=\"form-group\">\n// //           <label>Email</label>\n// //           <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\n// //         </div>\n// //         <div className=\"form-group\">\n// //           <label>Password</label>\n// //           <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} required />\n// //         </div>\n// //         <button type=\"submit\" className=\"btn btn-primary\">\n// //           {isLogin ? 'Login' : 'Register'}\n// //         </button>\n// //       </form>\n// //       <button onClick={() => setIsLogin(!isLogin)} className=\"btn btn-link\">\n// //         {isLogin ? 'Need to create an account? Register' : 'Already have an account? Login'}\n// //       </button>\n// //       {isPopupVisible && (\n// //         <div className=\"popup-container\">\n// //           <div className=\"popup-message\">{popupMessage}</div>\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // export default Auth;\n\n// // client/src/components/Auth.js\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import '../App.css';\n\n// const Auth = ({ setIsAuthenticated }) => {\n//   const [isLogin, setIsLogin] = useState(true);\n//   const [formData, setFormData] = useState({\n//     username: '',\n//     email: '',\n//     password: '',\n//     role: 'customer', // Default role is 'customer'\n//   });\n//   const [popupMessage, setPopupMessage] = useState('');\n//   const [isPopupVisible, setIsPopupVisible] = useState(false);\n//   const navigate = useNavigate();\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const showPopup = (message) => {\n//     setPopupMessage(message);\n//     setIsPopupVisible(true);\n//     setTimeout(() => {\n//       setIsPopupVisible(false);\n//     }, 3000);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const url = isLogin ? 'http://localhost:5000/api/auth/login' : 'http://localhost:5000/api/auth/register';\n//     try {\n//       const response = await axios.post(url, formData);\n//       console.log('Success:', response.data);\n//       if (isLogin) {\n//         localStorage.setItem('token', response.data.token);\n//         setIsAuthenticated(true);\n//         showPopup('Login successful!');\n//         setTimeout(() => {\n//           navigate('/home');\n//         }, 1000);\n//       } else {\n//         showPopup('Registration successful! Please log in.');\n//         setIsLogin(true);\n//       }\n//     } catch (err) {\n//       console.error('Error:', err);\n//       if (err.response) {\n//         // Check for the specific admin registration error message\n//         if (err.response.data.msg === 'An admin user already exists.') {\n//           showPopup('You cannot register yourself as an admin. This hotel already has an admin. Thank you.');\n//         } else {\n//           showPopup('Error: ' + (err.response.data.msg || err.response.data.error || 'Please try again.'));\n//         }\n//       } else {\n//         showPopup('Error: Could not connect to the server.');\n//       }\n//     }\n//   };\n\n//   return (\n//     <div className=\"container card\">\n//       <h2 className=\"text-center\">{isLogin ? 'Login' : 'Register'}</h2>\n//       <form onSubmit={handleSubmit}>\n//         {!isLogin && (\n//           <>\n//             <div className=\"form-group\">\n//               <label>Username</label>\n//               <input type=\"text\" name=\"username\" value={formData.username} onChange={handleChange} required />\n//             </div>\n//             <div className=\"form-group\">\n//               <label>Register As</label>\n//               <select name=\"role\" value={formData.role} onChange={handleChange} className=\"form-select\">\n//                 <option value=\"customer\">Customer</option>\n//                 <option value=\"staff\">Staff</option>\n//               </select>\n//             </div>\n//           </>\n//         )}\n//         <div className=\"form-group\">\n//           <label>Email</label>\n//           <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\n//         </div>\n//         <div className=\"form-group\">\n//           <label>Password</label>\n//           <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} required />\n//         </div>\n//         <button type=\"submit\" className=\"btn btn-primary\">\n//           {isLogin ? 'Login' : 'Register'}\n//         </button>\n//       </form>\n//       <button onClick={() => setIsLogin(!isLogin)} className=\"btn btn-link\">\n//         {isLogin ? 'Need to create an account? Register' : 'Already have an account? Login'}\n//       </button>\n//       {isPopupVisible && (\n//         <div className=\"popup-container\">\n//           <div className=\"popup-message\">{popupMessage}</div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Auth;\n\n// client/src/components/Auth.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Auth = ({\n  setIsAuthenticated\n}) => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    role: 'customer'\n  });\n  const [popupMessage, setPopupMessage] = useState('');\n  const [isPopupVisible, setIsPopupVisible] = useState(false);\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const showPopup = message => {\n    setPopupMessage(message);\n    setIsPopupVisible(true);\n    setTimeout(() => {\n      setIsPopupVisible(false);\n    }, 3000);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const url = isLogin ? 'http://localhost:5000/api/auth/login' : 'http://localhost:5000/api/auth/register';\n    try {\n      const response = await axios.post(url, formData);\n      console.log('Success:', response.data);\n      if (isLogin) {\n        localStorage.setItem('token', response.data.token);\n        setIsAuthenticated(true);\n        showPopup('Login successful!');\n        setTimeout(() => {\n          navigate('/home');\n        }, 1000);\n      } else {\n        showPopup('Registration successful! Please log in.');\n        setIsLogin(true);\n      }\n    } catch (err) {\n      console.error('Error:', err);\n      if (err.response) {\n        if (err.response.data.msg === 'An admin user already exists.') {\n          showPopup('You cannot register yourself as an admin. This hotel already has an admin. Thank you.');\n        } else {\n          showPopup('Error: ' + (err.response.data.msg || err.response.data.error || 'Please try again.'));\n        }\n      } else {\n        showPopup('Error: Could not connect to the server.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: isLogin ? 'Login' : 'Register'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [!isLogin && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: formData.username,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Register As\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"role\",\n            value: formData.role,\n            onChange: handleChange,\n            className: \"form-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"customer\",\n              children: \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"staff\",\n              children: \"Staff\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: isLogin ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsLogin(!isLogin),\n      className: \"btn btn-link\",\n      children: isLogin ? 'Need to create an account? Register' : 'Already have an account? Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 7\n    }, this), isPopupVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-message\",\n        children: popupMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 576,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"lrIpOwlPQNHzjJlxaszw/q+TyiM=\", false, function () {\n  return [useNavigate];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Auth","setIsAuthenticated","_s","isLogin","setIsLogin","formData","setFormData","username","email","password","role","popupMessage","setPopupMessage","isPopupVisible","setIsPopupVisible","navigate","handleChange","e","target","name","value","showPopup","message","setTimeout","handleSubmit","preventDefault","url","response","post","console","log","data","localStorage","setItem","token","err","error","msg","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","onClick","_c","$RefreshReg$"],"sources":["D:/CSE470 Project/StayHotel/client/src/components/Auth.js"],"sourcesContent":["// // // // client/src/components/Auth.js\r\n// // // import React, { useState } from 'react';\r\n// // // import axios from 'axios';\r\n// // // import { useNavigate } from 'react-router-dom';\r\n// // // import '../App.css';\r\n\r\n// // // const Auth = ({ setIsAuthenticated }) => {\r\n// // //   const [isLogin, setIsLogin] = useState(true);\r\n// // //   const [formData, setFormData] = useState({\r\n// // //     username: '',\r\n// // //     email: '',\r\n// // //     password: '',\r\n// // //   });\r\n// // //   const [popupMessage, setPopupMessage] = useState('');\r\n// // //   const [isPopupVisible, setIsPopupVisible] = useState(false);\r\n// // //   const navigate = useNavigate();\r\n\r\n// // //   const handleChange = (e) => {\r\n// // //     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n// // //   };\r\n\r\n// // //   const showPopup = (message) => {\r\n// // //     setPopupMessage(message);\r\n// // //     setIsPopupVisible(true);\r\n// // //     setTimeout(() => {\r\n// // //       setIsPopupVisible(false);\r\n// // //     }, 3000); // Popup disappears after 3 seconds\r\n// // //   };\r\n\r\n// // //   const handleSubmit = async (e) => {\r\n// // //     e.preventDefault();\r\n// // //     const url = isLogin ? 'http://localhost:5000/api/auth/login' : 'http://localhost:5000/api/auth/register';\r\n// // //     try {\r\n// // //       const response = await axios.post(url, formData);\r\n// // //       console.log('Success:', response.data);\r\n// // //       if (isLogin) {\r\n// // //         localStorage.setItem('token', response.data.token);\r\n// // //         setIsAuthenticated(true);\r\n// // //         showPopup('Login successful!');\r\n// // //         setTimeout(() => {\r\n// // //           navigate('/home');\r\n// // //         }, 1000); // Redirect after a short delay\r\n// // //       } else {\r\n// // //         showPopup('Registration successful! Please log in.');\r\n// // //         setIsLogin(true);\r\n// // //       }\r\n// // //     } catch (err) {\r\n// // //       console.error('Error:', err);\r\n// // //       // Check if the response object exists before trying to access its data\r\n// // //       if (err.response) {\r\n// // //         showPopup('Error: ' + (err.response.data.error || err.response.data.msg));\r\n// // //       } else {\r\n// // //         // If there is no response, it means the server is likely down\r\n// // //         showPopup('Error: Could not connect to the server.');\r\n// // //       }\r\n// // //     }\r\n// // //   };\r\n\r\n// // //   return (\r\n// // //     <div className=\"container card\">\r\n// // //       <h2 className=\"text-center\">{isLogin ? 'Login' : 'Register'}</h2>\r\n// // //       <form onSubmit={handleSubmit}>\r\n// // //         {!isLogin && (\r\n// // //           <div className=\"form-group\">\r\n// // //             <label>Username</label>\r\n// // //             <input type=\"text\" name=\"username\" value={formData.username} onChange={handleChange} required />\r\n// // //           </div>\r\n// // //         )}\r\n// // //         <div className=\"form-group\">\r\n// // //           <label>Email</label>\r\n// // //           <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\r\n// // //         </div>\r\n// // //         <div className=\"form-group\">\r\n// // //           <label>Password</label>\r\n// // //           <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} required />\r\n// // //         </div>\r\n// // //         <button type=\"submit\" className=\"btn btn-primary\">\r\n// // //           {isLogin ? 'Login' : 'Register'}\r\n// // //         </button>\r\n// // //       </form>\r\n// // //       <button onClick={() => setIsLogin(!isLogin)} className=\"btn btn-link\">\r\n// // //         {isLogin ? 'Need to create an account? Register' : 'Already have an account? Login'}\r\n// // //       </button>\r\n// // //       {isPopupVisible && (\r\n// // //         <div className=\"popup-container\">\r\n// // //           <div className=\"popup-message\">{popupMessage}</div>\r\n// // //         </div>\r\n// // //       )}\r\n// // //     </div>\r\n// // //   );\r\n// // // };\r\n\r\n// // // export default Auth;\r\n// // // \r\n// // // // client/src/components/Auth.js\r\n// // // import React, { useState } from 'react';\r\n// // // import axios from 'axios';\r\n// // // import { useNavigate } from 'react-router-dom';\r\n// // // import '../App.css';\r\n\r\n// // // const Auth = ({ setIsAuthenticated }) => {\r\n// // //   const [isLogin, setIsLogin] = useState(true);\r\n// // //   const [formData, setFormData] = useState({\r\n// // //     username: '',\r\n// // //     email: '',\r\n// // //     password: '',\r\n// // //     role: 'customer', // Default role is 'customer'\r\n// // //   });\r\n// // //   const [popupMessage, setPopupMessage] = useState('');\r\n// // //   const [isPopupVisible, setIsPopupVisible] = useState(false);\r\n// // //   const navigate = useNavigate();\r\n\r\n// // //   const handleChange = (e) => {\r\n// // //     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n// // //   };\r\n\r\n// // //   const showPopup = (message) => {\r\n// // //     setPopupMessage(message);\r\n// // //     setIsPopupVisible(true);\r\n// // //     setTimeout(() => {\r\n// // //       setIsPopupVisible(false);\r\n// // //     }, 3000); // Popup disappears after 3 seconds\r\n// // //   };\r\n\r\n// // //   const handleSubmit = async (e) => {\r\n// // //     e.preventDefault();\r\n// // //     const url = isLogin ? 'http://localhost:5000/api/auth/login' : 'http://localhost:5000/api/auth/register';\r\n// // //     try {\r\n// // //       const response = await axios.post(url, formData);\r\n// // //       console.log('Success:', response.data);\r\n// // //       if (isLogin) {\r\n// // //         localStorage.setItem('token', response.data.token);\r\n// // //         setIsAuthenticated(true);\r\n// // //         showPopup('Login successful!');\r\n// // //         setTimeout(() => {\r\n// // //           navigate('/home');\r\n// // //         }, 1000); // Redirect after a short delay\r\n// // //       } else {\r\n// // //         showPopup('Registration successful! Please log in.');\r\n// // //         setIsLogin(true);\r\n// // //       }\r\n// // //     } catch (err) {\r\n// // //       console.error('Error:', err);\r\n// // //       if (err.response) {\r\n// // //         showPopup('Error: ' + (err.response.data.error || err.response.data.msg));\r\n// // //       } else {\r\n// // //         showPopup('Error: Could not connect to the server.');\r\n// // //       }\r\n// // //     }\r\n// // //   };\r\n\r\n// // //   return (\r\n// // //     <div className=\"container card\">\r\n// // //       <h2 className=\"text-center\">{isLogin ? 'Login' : 'Register'}</h2>\r\n// // //       <form onSubmit={handleSubmit}>\r\n// // //         {!isLogin && (\r\n// // //           <>\r\n// // //             <div className=\"form-group\">\r\n// // //               <label>Username</label>\r\n// // //               <input type=\"text\" name=\"username\" value={formData.username} onChange={handleChange} required />\r\n// // //             </div>\r\n// // //             <div className=\"form-group\">\r\n// // //               <label>Register As</label>\r\n// // //               <select name=\"role\" value={formData.role} onChange={handleChange} className=\"form-select\">\r\n// // //                 <option value=\"customer\">Customer</option>\r\n// // //                 <option value=\"staff\">Staff</option>\r\n// // //                 <option value=\"admin\">Admin</option>\r\n// // //               </select>\r\n// // //             </div>\r\n// // //           </>\r\n// // //         )}\r\n// // //         <div className=\"form-group\">\r\n// // //           <label>Email</label>\r\n// // //           <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\r\n// // //         </div>\r\n// // //         <div className=\"form-group\">\r\n// // //           <label>Password</label>\r\n// // //           <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} required />\r\n// // //         </div>\r\n// // //         <button type=\"submit\" className=\"btn btn-primary\">\r\n// // //           {isLogin ? 'Login' : 'Register'}\r\n// // //         </button>\r\n// // //       </form>\r\n// // //       <button onClick={() => setIsLogin(!isLogin)} className=\"btn btn-link\">\r\n// // //         {isLogin ? 'Need to create an account? Register' : 'Already have an account? Login'}\r\n// // //       </button>\r\n// // //       {isPopupVisible && (\r\n// // //         <div className=\"popup-container\">\r\n// // //           <div className=\"popup-message\">{popupMessage}</div>\r\n// // //         </div>\r\n// // //       )}\r\n// // //     </div>\r\n// // //   );\r\n// // // };\r\n\r\n// // // export default Auth;\r\n\r\n// // // // client/src/components/Auth.js\r\n// // // import React, { useState } from 'react';\r\n// // // import axios from 'axios';\r\n// // // import { useNavigate } from 'react-router-dom';\r\n// // // import '../App.css';\r\n\r\n// // // const Auth = ({ setIsAuthenticated }) => {\r\n// // //   const [isLogin, setIsLogin] = useState(true);\r\n// // //   const [formData, setFormData] = useState({\r\n// // //     username: '',\r\n// // //     email: '',\r\n// // //     password: '',\r\n// // //     role: 'customer', // Default role is 'customer'\r\n// // //   });\r\n// // //   const [popupMessage, setPopupMessage] = useState('');\r\n// // //   const [isPopupVisible, setIsPopupVisible] = useState(false);\r\n// // //   const navigate = useNavigate();\r\n\r\n// // //   const handleChange = (e) => {\r\n// // //     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n// // //   };\r\n\r\n// // //   const showPopup = (message) => {\r\n// // //     setPopupMessage(message);\r\n// // //     setIsPopupVisible(true);\r\n// // //     setTimeout(() => {\r\n// // //       setIsPopupVisible(false);\r\n// // //     }, 3000);\r\n// // //   };\r\n\r\n// // //   const handleSubmit = async (e) => {\r\n// // //     e.preventDefault();\r\n// // //     const url = isLogin ? 'http://localhost:5000/api/auth/login' : 'http://localhost:5000/api/auth/register';\r\n// // //     try {\r\n// // //       const response = await axios.post(url, formData);\r\n// // //       console.log('Success:', response.data);\r\n// // //       if (isLogin) {\r\n// // //         localStorage.setItem('token', response.data.token);\r\n// // //         setIsAuthenticated(true);\r\n// // //         showPopup('Login successful!');\r\n// // //         setTimeout(() => {\r\n// // //           navigate('/home');\r\n// // //         }, 1000);\r\n// // //       } else {\r\n// // //         showPopup('Registration successful! Please log in.');\r\n// // //         setIsLogin(true);\r\n// // //       }\r\n// // //     } catch (err) {\r\n// // //       console.error('Error:', err);\r\n// // //       if (err.response) {\r\n// // //         showPopup('Error: ' + (err.response.data.msg || err.response.data.error || 'Please try again.'));\r\n// // //       } else {\r\n// // //         showPopup('Error: Could not connect to the server.');\r\n// // //       }\r\n// // //     }\r\n// // //   };\r\n\r\n// // //   return (\r\n// // //     <div className=\"container card\">\r\n// // //       <h2 className=\"text-center\">{isLogin ? 'Login' : 'Register'}</h2>\r\n// // //       <form onSubmit={handleSubmit}>\r\n// // //         {!isLogin && (\r\n// // //           <>\r\n// // //             <div className=\"form-group\">\r\n// // //               <label>Username</label>\r\n// // //               <input type=\"text\" name=\"username\" value={formData.username} onChange={handleChange} required />\r\n// // //             </div>\r\n// // //             <div className=\"form-group\">\r\n// // //               <label>Register As</label>\r\n// // //               <select name=\"role\" value={formData.role} onChange={handleChange} className=\"form-select\">\r\n// // //                 <option value=\"customer\">Customer</option>\r\n// // //                 <option value=\"staff\">Staff</option>\r\n// // //               </select>\r\n// // //             </div>\r\n// // //           </>\r\n// // //         )}\r\n// // //         <div className=\"form-group\">\r\n// // //           <label>Email</label>\r\n// // //           <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\r\n// // //         </div>\r\n// // //         <div className=\"form-group\">\r\n// // //           <label>Password</label>\r\n// // //           <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} required />\r\n// // //         </div>\r\n// // //         <button type=\"submit\" className=\"btn btn-primary\">\r\n// // //           {isLogin ? 'Login' : 'Register'}\r\n// // //         </button>\r\n// // //       </form>\r\n// // //       <button onClick={() => setIsLogin(!isLogin)} className=\"btn btn-link\">\r\n// // //         {isLogin ? 'Need to create an account? Register' : 'Already have an account? Login'}\r\n// // //       </button>\r\n// // //       {isPopupVisible && (\r\n// // //         <div className=\"popup-container\">\r\n// // //           <div className=\"popup-message\">{popupMessage}</div>\r\n// // //         </div>\r\n// // //       )}\r\n// // //     </div>\r\n// // //   );\r\n// // // };\r\n\r\n// // // export default Auth;\r\n\r\n// // // client/src/components/Auth.js\r\n// // import React, { useState } from 'react';\r\n// // import axios from 'axios';\r\n// // import { useNavigate } from 'react-router-dom';\r\n// // import '../App.css';\r\n\r\n// // const Auth = ({ setIsAuthenticated }) => {\r\n// //   const [isLogin, setIsLogin] = useState(true);\r\n// //   const [formData, setFormData] = useState({\r\n// //     username: '',\r\n// //     email: '',\r\n// //     password: '',\r\n// //     role: 'customer', // Default role is 'customer'\r\n// //   });\r\n// //   const [popupMessage, setPopupMessage] = useState('');\r\n// //   const [isPopupVisible, setIsPopupVisible] = useState(false);\r\n// //   const navigate = useNavigate();\r\n\r\n// //   const handleChange = (e) => {\r\n// //     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n// //   };\r\n\r\n// //   const showPopup = (message) => {\r\n// //     setPopupMessage(message);\r\n// //     setIsPopupVisible(true);\r\n// //     setTimeout(() => {\r\n// //       setIsPopupVisible(false);\r\n// //     }, 3000);\r\n// //   };\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n// //     const url = isLogin ? 'http://localhost:5000/api/auth/login' : 'http://localhost:5000/api/auth/register';\r\n// //     try {\r\n// //       const response = await axios.post(url, formData);\r\n// //       console.log('Success:', response.data);\r\n// //       if (isLogin) {\r\n// //         localStorage.setItem('token', response.data.token);\r\n// //         setIsAuthenticated(true);\r\n// //         showPopup('Login successful!');\r\n// //         setTimeout(() => {\r\n// //           navigate('/home');\r\n// //         }, 1000);\r\n// //       } else {\r\n// //         showPopup('Registration successful! Please log in.');\r\n// //         setIsLogin(true);\r\n// //       }\r\n// //     } catch (err) {\r\n// //       console.error('Error:', err);\r\n// //       if (err.response) {\r\n// //         // Check for the specific admin registration error message\r\n// //         if (err.response.data.msg === 'An admin user already exists.') {\r\n// //           showPopup('You cannot register yourself as an admin. This hotel already has an admin. Thank you.');\r\n// //         } else {\r\n// //           showPopup('Error: ' + (err.response.data.msg || err.response.data.error || 'Please try again.'));\r\n// //         }\r\n// //       } else {\r\n// //         showPopup('Error: Could not connect to the server.');\r\n// //       }\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"container card\">\r\n// //       <h2 className=\"text-center\">{isLogin ? 'Login' : 'Register'}</h2>\r\n// //       <form onSubmit={handleSubmit}>\r\n// //         {!isLogin && (\r\n// //           <>\r\n// //             <div className=\"form-group\">\r\n// //               <label>Username</label>\r\n// //               <input type=\"text\" name=\"username\" value={formData.username} onChange={handleChange} required />\r\n// //             </div>\r\n// //             <div className=\"form-group\">\r\n// //               <label>Register As</label>\r\n// //               <select name=\"role\" value={formData.role} onChange={handleChange} className=\"form-select\">\r\n// //                 <option value=\"customer\">Customer</option>\r\n// //                 <option value=\"staff\">Staff</option>\r\n// //               </select>\r\n// //             </div>\r\n// //           </>\r\n// //         )}\r\n// //         <div className=\"form-group\">\r\n// //           <label>Email</label>\r\n// //           <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\r\n// //         </div>\r\n// //         <div className=\"form-group\">\r\n// //           <label>Password</label>\r\n// //           <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} required />\r\n// //         </div>\r\n// //         <button type=\"submit\" className=\"btn btn-primary\">\r\n// //           {isLogin ? 'Login' : 'Register'}\r\n// //         </button>\r\n// //       </form>\r\n// //       <button onClick={() => setIsLogin(!isLogin)} className=\"btn btn-link\">\r\n// //         {isLogin ? 'Need to create an account? Register' : 'Already have an account? Login'}\r\n// //       </button>\r\n// //       {isPopupVisible && (\r\n// //         <div className=\"popup-container\">\r\n// //           <div className=\"popup-message\">{popupMessage}</div>\r\n// //         </div>\r\n// //       )}\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Auth;\r\n\r\n// // client/src/components/Auth.js\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import '../App.css';\r\n\r\n// const Auth = ({ setIsAuthenticated }) => {\r\n//   const [isLogin, setIsLogin] = useState(true);\r\n//   const [formData, setFormData] = useState({\r\n//     username: '',\r\n//     email: '',\r\n//     password: '',\r\n//     role: 'customer', // Default role is 'customer'\r\n//   });\r\n//   const [popupMessage, setPopupMessage] = useState('');\r\n//   const [isPopupVisible, setIsPopupVisible] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const showPopup = (message) => {\r\n//     setPopupMessage(message);\r\n//     setIsPopupVisible(true);\r\n//     setTimeout(() => {\r\n//       setIsPopupVisible(false);\r\n//     }, 3000);\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const url = isLogin ? 'http://localhost:5000/api/auth/login' : 'http://localhost:5000/api/auth/register';\r\n//     try {\r\n//       const response = await axios.post(url, formData);\r\n//       console.log('Success:', response.data);\r\n//       if (isLogin) {\r\n//         localStorage.setItem('token', response.data.token);\r\n//         setIsAuthenticated(true);\r\n//         showPopup('Login successful!');\r\n//         setTimeout(() => {\r\n//           navigate('/home');\r\n//         }, 1000);\r\n//       } else {\r\n//         showPopup('Registration successful! Please log in.');\r\n//         setIsLogin(true);\r\n//       }\r\n//     } catch (err) {\r\n//       console.error('Error:', err);\r\n//       if (err.response) {\r\n//         // Check for the specific admin registration error message\r\n//         if (err.response.data.msg === 'An admin user already exists.') {\r\n//           showPopup('You cannot register yourself as an admin. This hotel already has an admin. Thank you.');\r\n//         } else {\r\n//           showPopup('Error: ' + (err.response.data.msg || err.response.data.error || 'Please try again.'));\r\n//         }\r\n//       } else {\r\n//         showPopup('Error: Could not connect to the server.');\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container card\">\r\n//       <h2 className=\"text-center\">{isLogin ? 'Login' : 'Register'}</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         {!isLogin && (\r\n//           <>\r\n//             <div className=\"form-group\">\r\n//               <label>Username</label>\r\n//               <input type=\"text\" name=\"username\" value={formData.username} onChange={handleChange} required />\r\n//             </div>\r\n//             <div className=\"form-group\">\r\n//               <label>Register As</label>\r\n//               <select name=\"role\" value={formData.role} onChange={handleChange} className=\"form-select\">\r\n//                 <option value=\"customer\">Customer</option>\r\n//                 <option value=\"staff\">Staff</option>\r\n//               </select>\r\n//             </div>\r\n//           </>\r\n//         )}\r\n//         <div className=\"form-group\">\r\n//           <label>Email</label>\r\n//           <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\r\n//         </div>\r\n//         <div className=\"form-group\">\r\n//           <label>Password</label>\r\n//           <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} required />\r\n//         </div>\r\n//         <button type=\"submit\" className=\"btn btn-primary\">\r\n//           {isLogin ? 'Login' : 'Register'}\r\n//         </button>\r\n//       </form>\r\n//       <button onClick={() => setIsLogin(!isLogin)} className=\"btn btn-link\">\r\n//         {isLogin ? 'Need to create an account? Register' : 'Already have an account? Login'}\r\n//       </button>\r\n//       {isPopupVisible && (\r\n//         <div className=\"popup-container\">\r\n//           <div className=\"popup-message\">{popupMessage}</div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Auth;\r\n\r\n// client/src/components/Auth.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../App.css';\r\n\r\nconst Auth = ({ setIsAuthenticated }) => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    role: 'customer',\r\n  });\r\n  const [popupMessage, setPopupMessage] = useState('');\r\n  const [isPopupVisible, setIsPopupVisible] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const showPopup = (message) => {\r\n    setPopupMessage(message);\r\n    setIsPopupVisible(true);\r\n    setTimeout(() => {\r\n      setIsPopupVisible(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const url = isLogin ? 'http://localhost:5000/api/auth/login' : 'http://localhost:5000/api/auth/register';\r\n    try {\r\n      const response = await axios.post(url, formData);\r\n      console.log('Success:', response.data);\r\n      if (isLogin) {\r\n        localStorage.setItem('token', response.data.token);\r\n        setIsAuthenticated(true);\r\n        showPopup('Login successful!');\r\n        setTimeout(() => {\r\n          navigate('/home');\r\n        }, 1000);\r\n      } else {\r\n        showPopup('Registration successful! Please log in.');\r\n        setIsLogin(true);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error:', err);\r\n      if (err.response) {\r\n        if (err.response.data.msg === 'An admin user already exists.') {\r\n          showPopup('You cannot register yourself as an admin. This hotel already has an admin. Thank you.');\r\n        } else {\r\n          showPopup('Error: ' + (err.response.data.msg || err.response.data.error || 'Please try again.'));\r\n        }\r\n      } else {\r\n        showPopup('Error: Could not connect to the server.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container card\">\r\n      <h2 className=\"text-center\">{isLogin ? 'Login' : 'Register'}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {!isLogin && (\r\n          <>\r\n            <div className=\"form-group\">\r\n              <label>Username</label>\r\n              <input type=\"text\" name=\"username\" value={formData.username} onChange={handleChange} required />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Register As</label>\r\n              <select name=\"role\" value={formData.role} onChange={handleChange} className=\"form-select\">\r\n                <option value=\"customer\">Customer</option>\r\n                <option value=\"staff\">Staff</option>\r\n              </select>\r\n            </div>\r\n          </>\r\n        )}\r\n        <div className=\"form-group\">\r\n          <label>Email</label>\r\n          <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Password</label>\r\n          <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} required />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          {isLogin ? 'Login' : 'Register'}\r\n        </button>\r\n      </form>\r\n      <button onClick={() => setIsLogin(!isLogin)} className=\"btn btn-link\">\r\n        {isLogin ? 'Need to create an account? Register' : 'Already have an account? Login'}\r\n      </button>\r\n      {isPopupVisible && (\r\n        <div className=\"popup-container\">\r\n          <div className=\"popup-message\">{popupMessage}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
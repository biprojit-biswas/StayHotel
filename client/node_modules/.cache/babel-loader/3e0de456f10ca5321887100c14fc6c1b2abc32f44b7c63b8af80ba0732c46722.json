{"ast":null,"code":"// // client/src/pages/HomePage.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Link } from 'react-router-dom';\n// import '../App.css';\n\n// const HomePage = () => {\n//   const [rooms, setRooms] = useState([]);\n//   const [selectedFilters, setSelectedFilters] = useState({\n//     'Single': false,\n//     'Double': false,\n//     'Suite': false,\n//     'AC': false,\n//     'Breakfast': false,\n//   });\n//   const [sortOption, setSortOption] = useState('Popularity');\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const isAuthenticated = !!localStorage.getItem('token');\n\n//   useEffect(() => {\n//     const fetchRooms = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/api/rooms');\n//         setRooms(response.data);\n//       } catch (err) {\n//         console.error('Error fetching rooms:', err);\n//       }\n//     };\n//     fetchRooms();\n//   }, []);\n\n//   const handleFilterChange = (event) => {\n//     const { id, checked } = event.target;\n//     setSelectedFilters(prevFilters => ({\n//       ...prevFilters,\n//       [id]: checked,\n//     }));\n//   };\n\n//   const handleSortChange = (event) => {\n//     setSortOption(event.target.value);\n//   };\n\n//   const handleSearchChange = (event) => {\n//     setSearchTerm(event.target.value);\n//   };\n\n//   const filteredRooms = rooms.filter(room => {\n//     const lowerCaseSearchTerm = searchTerm.toLowerCase();\n\n//     // Check if the room matches the search term in any relevant field\n//     const matchesSearchTerm = \n//       room.title.toLowerCase().includes(lowerCaseSearchTerm) ||\n//       room.description.toLowerCase().includes(lowerCaseSearchTerm) ||\n//       room.roomType.toLowerCase().includes(lowerCaseSearchTerm) ||\n//       room.amenities.some(amenity => amenity.toLowerCase().includes(lowerCaseSearchTerm));\n\n//     // Check if the room matches the checkbox filters\n//     const activeFilters = Object.keys(selectedFilters).filter(key => selectedFilters[key]);\n//     const matchesCheckboxFilters = () => {\n//         if (activeFilters.length === 0) {\n//             return true;\n//         }\n//         const typeFilters = ['Single', 'Double', 'Suite'].filter(type => selectedFilters[type]);\n//         const amenityFilters = ['AC', 'Breakfast'].filter(amenity => selectedFilters[amenity]);\n\n//         const matchesType = typeFilters.length === 0 || typeFilters.includes(room.roomType);\n//         const matchesAmenities = amenityFilters.length === 0 || amenityFilters.every(amenity => room.amenities.includes(amenity));\n\n//         return matchesType && matchesAmenities;\n//     };\n\n//     // Only return the room if it matches BOTH the search term and the checkbox filters\n//     return matchesSearchTerm && matchesCheckboxFilters();\n//   });\n\n//   const sortedRooms = [...filteredRooms].sort((a, b) => {\n//     if (sortOption === 'Price (Low to High)') {\n//       return a.price - b.price;\n//     }\n//     if (sortOption === 'Price (High to Low)') {\n//       return b.price - a.price;\n//     }\n//     return 0;\n//   });\n\n//   const handleSignOut = () => {\n//     localStorage.removeItem('token');\n//     window.location.reload();\n//   };\n\n//   return (\n//     <div className=\"home-container\">\n//       <div className=\"hero-background\"></div>\n//       <nav className=\"navbar\">\n//         <div className=\"navbar-left\">\n//           <div className=\"navbar-logo\">StayHotel</div>\n//           <div className=\"navbar-search\">\n//             <input \n//               type=\"text\" \n//               placeholder=\"Search rooms...\" \n//               value={searchTerm} \n//               onChange={handleSearchChange} \n//               className=\"search-input\"\n//             />\n//             <button className=\"search-button\">\n//               <i className=\"fas fa-search\"></i>\n//             </button>\n//           </div>\n//         </div>\n//         <div className=\"navbar-links\">\n//           <a href=\"/flights\" className=\"nav-link\">Flight</a>\n//           <a href=\"/hotel\" className=\"nav-link\">Hotel</a>\n//           <a href=\"/tours\" className=\"nav-link\">Tour</a>\n//           <a href=\"/transportation\" className=\"nav-link\">Transportation</a>\n//           <a href=\"/gifts\" className=\"nav-link\">Gift Card</a>\n//           {isAuthenticated && (\n//             <Link to=\"/mybookings\" className=\"nav-link\">My Bookings</Link>\n//           )}\n//         </div>\n//         <div className=\"navbar-auth\">\n//           {isAuthenticated ? (\n//             <button className=\"btn-sign-in\" onClick={handleSignOut}>Sign Out</button>\n//           ) : (\n//             <Link to=\"/auth\" className=\"btn-sign-in\">Sign In</Link>\n//           )}\n//         </div>\n//       </nav>\n\n//       <div className=\"hero-section\">\n//         <div className=\"hero-overlay\">\n//           <h1 className=\"hero-title\">Your Perfect Getaway Awaits!</h1>\n//           <p className=\"hero-subtitle\">Discover our exclusive rooms designed for your comfort.</p>\n//           <Link to=\"/rooms\" className=\"btn-discover\">Explore Our Rooms</Link>\n//         </div>\n//       </div>\n\n//       <div className=\"content-area\">\n//         <div className=\"filters-section card\">\n//           <h3><i className=\"fas fa-filter\"></i> Filters</h3>\n//           <p className=\"filter-group-title\">Room Type</p>\n//           <div className=\"filter-option\">\n//             <input type=\"checkbox\" id=\"Single\" checked={selectedFilters['Single']} onChange={handleFilterChange} />\n//             <label htmlFor=\"Single\">Single</label>\n//           </div>\n//           <div className=\"filter-option\">\n//             <input type=\"checkbox\" id=\"Double\" checked={selectedFilters['Double']} onChange={handleFilterChange} />\n//             <label htmlFor=\"Double\">Double</label>\n//           </div>\n//           <div className=\"filter-option\">\n//             <input type=\"checkbox\" id=\"Suite\" checked={selectedFilters['Suite']} onChange={handleFilterChange} />\n//             <label htmlFor=\"Suite\">Suite</label>\n//           </div>\n\n//           <p className=\"filter-group-title\">Amenities</p>\n//           <div className=\"filter-option\">\n//             <input type=\"checkbox\" id=\"AC\" checked={selectedFilters['AC']} onChange={handleFilterChange} />\n//             <label htmlFor=\"AC\">Air Conditioning</label>\n//           </div>\n//           <div className=\"filter-option\">\n//             <input type=\"checkbox\" id=\"Breakfast\" checked={selectedFilters['Breakfast']} onChange={handleFilterChange} />\n//             <label htmlFor=\"Breakfast\">Breakfast</label>\n//           </div>\n//         </div>\n//         <div className=\"results-section\">\n//           <div className=\"results-header\">\n//             <p>{sortedRooms.length} rooms found</p>\n//             <select className=\"sort-by\" value={sortOption} onChange={handleSortChange}>\n//               <option>Popularity</option>\n//               <option>Price (Low to High)</option>\n//               <option>Price (High to Low)</option>\n//             </select>\n//           </div>\n//           {sortedRooms.length > 0 ? (\n//             sortedRooms.map(room => (\n//               <div key={room._id} className=\"room-card card\">\n//                 <img src={room.image} alt={room.title} className=\"room-image\" />\n//                 <div className=\"room-info\">\n//                   <h4 className=\"room-title\">{room.title}</h4>\n//                   <p className=\"room-location\"><i className=\"fas fa-bed\"></i> {room.beds} Beds | <i className=\"fas fa-user\"></i> {room.guests} Guests</p>\n//                   {room.availability ? (\n//                     <p className=\"room-availability\">Available</p>\n//                   ) : (\n//                     <p className=\"room-unavailable\">Unavailable</p>\n//                   )}\n//                   <div className=\"room-amenities\">\n//                     {room.amenities.map(amenity => (\n//                       <span key={amenity}>\n//                         <i className={`fas fa-${amenity.toLowerCase().replace(' ', '-')}`}></i> {amenity}\n//                       </span>\n//                     ))}\n//                   </div>\n//                 </div>\n//                 <div className=\"room-price-booking\">\n//                   <p className=\"price-from\">From</p>\n//                   <p className=\"price\">BDT {room.price} <span className=\"price-per-night\">/ night</span></p>\n//                   <Link to={`/book/${room._id}`} className=\"btn-select\">Book Now</Link>\n//                 </div>\n//               </div>\n//             ))\n//           ) : (\n//             <div className=\"no-rooms-found\">\n//               <p>No rooms found matching your criteria.</p>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default HomePage;","map":{"version":3,"names":[],"sources":["D:/CSE470 Project/StayHotel/client/src/pages/HomePage.js"],"sourcesContent":["// // client/src/pages/HomePage.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { Link } from 'react-router-dom';\r\n// import '../App.css';\r\n\r\n// const HomePage = () => {\r\n//   const [rooms, setRooms] = useState([]);\r\n//   const [selectedFilters, setSelectedFilters] = useState({\r\n//     'Single': false,\r\n//     'Double': false,\r\n//     'Suite': false,\r\n//     'AC': false,\r\n//     'Breakfast': false,\r\n//   });\r\n//   const [sortOption, setSortOption] = useState('Popularity');\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const isAuthenticated = !!localStorage.getItem('token');\r\n\r\n//   useEffect(() => {\r\n//     const fetchRooms = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:5000/api/rooms');\r\n//         setRooms(response.data);\r\n//       } catch (err) {\r\n//         console.error('Error fetching rooms:', err);\r\n//       }\r\n//     };\r\n//     fetchRooms();\r\n//   }, []);\r\n\r\n//   const handleFilterChange = (event) => {\r\n//     const { id, checked } = event.target;\r\n//     setSelectedFilters(prevFilters => ({\r\n//       ...prevFilters,\r\n//       [id]: checked,\r\n//     }));\r\n//   };\r\n\r\n//   const handleSortChange = (event) => {\r\n//     setSortOption(event.target.value);\r\n//   };\r\n  \r\n//   const handleSearchChange = (event) => {\r\n//     setSearchTerm(event.target.value);\r\n//   };\r\n\r\n//   const filteredRooms = rooms.filter(room => {\r\n//     const lowerCaseSearchTerm = searchTerm.toLowerCase();\r\n\r\n//     // Check if the room matches the search term in any relevant field\r\n//     const matchesSearchTerm = \r\n//       room.title.toLowerCase().includes(lowerCaseSearchTerm) ||\r\n//       room.description.toLowerCase().includes(lowerCaseSearchTerm) ||\r\n//       room.roomType.toLowerCase().includes(lowerCaseSearchTerm) ||\r\n//       room.amenities.some(amenity => amenity.toLowerCase().includes(lowerCaseSearchTerm));\r\n      \r\n//     // Check if the room matches the checkbox filters\r\n//     const activeFilters = Object.keys(selectedFilters).filter(key => selectedFilters[key]);\r\n//     const matchesCheckboxFilters = () => {\r\n//         if (activeFilters.length === 0) {\r\n//             return true;\r\n//         }\r\n//         const typeFilters = ['Single', 'Double', 'Suite'].filter(type => selectedFilters[type]);\r\n//         const amenityFilters = ['AC', 'Breakfast'].filter(amenity => selectedFilters[amenity]);\r\n        \r\n//         const matchesType = typeFilters.length === 0 || typeFilters.includes(room.roomType);\r\n//         const matchesAmenities = amenityFilters.length === 0 || amenityFilters.every(amenity => room.amenities.includes(amenity));\r\n        \r\n//         return matchesType && matchesAmenities;\r\n//     };\r\n\r\n//     // Only return the room if it matches BOTH the search term and the checkbox filters\r\n//     return matchesSearchTerm && matchesCheckboxFilters();\r\n//   });\r\n\r\n//   const sortedRooms = [...filteredRooms].sort((a, b) => {\r\n//     if (sortOption === 'Price (Low to High)') {\r\n//       return a.price - b.price;\r\n//     }\r\n//     if (sortOption === 'Price (High to Low)') {\r\n//       return b.price - a.price;\r\n//     }\r\n//     return 0;\r\n//   });\r\n\r\n//   const handleSignOut = () => {\r\n//     localStorage.removeItem('token');\r\n//     window.location.reload();\r\n//   };\r\n  \r\n//   return (\r\n//     <div className=\"home-container\">\r\n//       <div className=\"hero-background\"></div>\r\n//       <nav className=\"navbar\">\r\n//         <div className=\"navbar-left\">\r\n//           <div className=\"navbar-logo\">StayHotel</div>\r\n//           <div className=\"navbar-search\">\r\n//             <input \r\n//               type=\"text\" \r\n//               placeholder=\"Search rooms...\" \r\n//               value={searchTerm} \r\n//               onChange={handleSearchChange} \r\n//               className=\"search-input\"\r\n//             />\r\n//             <button className=\"search-button\">\r\n//               <i className=\"fas fa-search\"></i>\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"navbar-links\">\r\n//           <a href=\"/flights\" className=\"nav-link\">Flight</a>\r\n//           <a href=\"/hotel\" className=\"nav-link\">Hotel</a>\r\n//           <a href=\"/tours\" className=\"nav-link\">Tour</a>\r\n//           <a href=\"/transportation\" className=\"nav-link\">Transportation</a>\r\n//           <a href=\"/gifts\" className=\"nav-link\">Gift Card</a>\r\n//           {isAuthenticated && (\r\n//             <Link to=\"/mybookings\" className=\"nav-link\">My Bookings</Link>\r\n//           )}\r\n//         </div>\r\n//         <div className=\"navbar-auth\">\r\n//           {isAuthenticated ? (\r\n//             <button className=\"btn-sign-in\" onClick={handleSignOut}>Sign Out</button>\r\n//           ) : (\r\n//             <Link to=\"/auth\" className=\"btn-sign-in\">Sign In</Link>\r\n//           )}\r\n//         </div>\r\n//       </nav>\r\n      \r\n//       <div className=\"hero-section\">\r\n//         <div className=\"hero-overlay\">\r\n//           <h1 className=\"hero-title\">Your Perfect Getaway Awaits!</h1>\r\n//           <p className=\"hero-subtitle\">Discover our exclusive rooms designed for your comfort.</p>\r\n//           <Link to=\"/rooms\" className=\"btn-discover\">Explore Our Rooms</Link>\r\n//         </div>\r\n//       </div>\r\n      \r\n//       <div className=\"content-area\">\r\n//         <div className=\"filters-section card\">\r\n//           <h3><i className=\"fas fa-filter\"></i> Filters</h3>\r\n//           <p className=\"filter-group-title\">Room Type</p>\r\n//           <div className=\"filter-option\">\r\n//             <input type=\"checkbox\" id=\"Single\" checked={selectedFilters['Single']} onChange={handleFilterChange} />\r\n//             <label htmlFor=\"Single\">Single</label>\r\n//           </div>\r\n//           <div className=\"filter-option\">\r\n//             <input type=\"checkbox\" id=\"Double\" checked={selectedFilters['Double']} onChange={handleFilterChange} />\r\n//             <label htmlFor=\"Double\">Double</label>\r\n//           </div>\r\n//           <div className=\"filter-option\">\r\n//             <input type=\"checkbox\" id=\"Suite\" checked={selectedFilters['Suite']} onChange={handleFilterChange} />\r\n//             <label htmlFor=\"Suite\">Suite</label>\r\n//           </div>\r\n          \r\n//           <p className=\"filter-group-title\">Amenities</p>\r\n//           <div className=\"filter-option\">\r\n//             <input type=\"checkbox\" id=\"AC\" checked={selectedFilters['AC']} onChange={handleFilterChange} />\r\n//             <label htmlFor=\"AC\">Air Conditioning</label>\r\n//           </div>\r\n//           <div className=\"filter-option\">\r\n//             <input type=\"checkbox\" id=\"Breakfast\" checked={selectedFilters['Breakfast']} onChange={handleFilterChange} />\r\n//             <label htmlFor=\"Breakfast\">Breakfast</label>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"results-section\">\r\n//           <div className=\"results-header\">\r\n//             <p>{sortedRooms.length} rooms found</p>\r\n//             <select className=\"sort-by\" value={sortOption} onChange={handleSortChange}>\r\n//               <option>Popularity</option>\r\n//               <option>Price (Low to High)</option>\r\n//               <option>Price (High to Low)</option>\r\n//             </select>\r\n//           </div>\r\n//           {sortedRooms.length > 0 ? (\r\n//             sortedRooms.map(room => (\r\n//               <div key={room._id} className=\"room-card card\">\r\n//                 <img src={room.image} alt={room.title} className=\"room-image\" />\r\n//                 <div className=\"room-info\">\r\n//                   <h4 className=\"room-title\">{room.title}</h4>\r\n//                   <p className=\"room-location\"><i className=\"fas fa-bed\"></i> {room.beds} Beds | <i className=\"fas fa-user\"></i> {room.guests} Guests</p>\r\n//                   {room.availability ? (\r\n//                     <p className=\"room-availability\">Available</p>\r\n//                   ) : (\r\n//                     <p className=\"room-unavailable\">Unavailable</p>\r\n//                   )}\r\n//                   <div className=\"room-amenities\">\r\n//                     {room.amenities.map(amenity => (\r\n//                       <span key={amenity}>\r\n//                         <i className={`fas fa-${amenity.toLowerCase().replace(' ', '-')}`}></i> {amenity}\r\n//                       </span>\r\n//                     ))}\r\n//                   </div>\r\n//                 </div>\r\n//                 <div className=\"room-price-booking\">\r\n//                   <p className=\"price-from\">From</p>\r\n//                   <p className=\"price\">BDT {room.price} <span className=\"price-per-night\">/ night</span></p>\r\n//                   <Link to={`/book/${room._id}`} className=\"btn-select\">Book Now</Link>\r\n//                 </div>\r\n//               </div>\r\n//             ))\r\n//           ) : (\r\n//             <div className=\"no-rooms-found\">\r\n//               <p>No rooms found matching your criteria.</p>\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default HomePage;"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}